
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;


contract Queue {
    
    string[] public queueInShop;

    constructor() public {
        require(tvm.pubkey() != 0, 101);
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();
    }

	modifier checkOwnerAndAccept() {
		// Check that message was signed with contracts key.
		require(msg.pubkey() == tvm.pubkey(), 102);
		tvm.accept();
		_;
	}
    
    // Adding a unit to the queue
    function addToQueue(string name) public checkOwnerAndAccept() {
        queueInShop.push(name);
    }

    // Removing the first item from the queue
    function removeToQueue() public checkOwnerAndAccept() {

        // Checking for an empty array
        if(!queueInShop.empty()) {
            for(uint i = 0; i < queueInShop.length - 1; ++i) {
            queueInShop[i]=queueInShop[i+1];
            }
            queueInShop.pop();
        }
    }

}
