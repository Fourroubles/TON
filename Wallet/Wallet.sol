/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

// This is class that describes you smart contract.
contract Wallet {

   constructor() public {
        // check that contract's public key is set
        require(tvm.pubkey() != 0, 101);
        // Check that message has signature (msg.pubkey() is not zero) and message is signed with the owner's private key
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();
    }


    // Modifier that allows function to accept external call only if it was signed
    // with contract owner's public key.
    modifier checkOwnerAndAccept {
        require(msg.pubkey() == tvm.pubkey(), 100);
		tvm.accept();
		_;
	}

    /// @dev Allows to transfer tons to the destination account without commision
    /// @param dest Transfer target address.
    /// @param value Nanotons value to transfer.
    function sendTransactionWithoutCommision(address dest, uint128 value) public pure checkOwnerAndAccept {
        dest.transfer(value, true, 0);
    }

    /// @dev Allows to transfer tons to the destination account with commision
    /// @param dest Transfer target address.
    /// @param value Nanotons value to transfer.
     function sendTransactionWithCommision(address dest, uint128 value) public pure checkOwnerAndAccept {
        dest.transfer(value, true, 1);
    }

    /// @dev Allows to transfer tons to the destination account and destroy contract
    /// @param dest Transfer target address.
     function sendAllCristalAndDestroyContract(address dest) public pure checkOwnerAndAccept {
        dest.transfer(1, true, 160);
    }
}